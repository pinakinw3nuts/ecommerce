{
  "compilerOptions": {
    /* Basic Options */
    "target": "ES2020",                       /* Specify ECMAScript target version: ES2020 */
    "module": "commonjs",                     /* Specify module code generation */
    "lib": ["ES2020"],                        /* Specify library files to be included in the compilation */
    "outDir": "dist",                         /* Redirect output structure to the directory */
    "rootDir": "src",                         /* Specify the root directory of input files */
    "removeComments": false,                  /* Do not remove comments in output */
    
    /* Strict Type-Checking Options */
    "strict": true,                           /* Enable all strict type-checking options */
    "noImplicitAny": true,                    /* Raise error on expressions and declarations with an implied 'any' type */
    "strictNullChecks": true,                 /* Enable strict null checks */
    "strictFunctionTypes": true,              /* Enable strict checking of function types */
    "strictBindCallApply": true,              /* Enable strict 'bind', 'call', and 'apply' methods on functions */
    "strictPropertyInitialization": false,    /* Enable strict checking of property initialization in classes */
    "noImplicitThis": true,                   /* Raise error on 'this' expressions with an implied 'any' type */
    "alwaysStrict": true,                     /* Parse in strict mode and emit "use strict" for each source file */
    
    /* Additional Checks */
    "noUnusedLocals": true,                   /* Report errors on unused locals */
    "noUnusedParameters": true,               /* Report errors on unused parameters */
    "noImplicitReturns": true,                /* Report error when not all code paths in function return a value */
    "noFallthroughCasesInSwitch": true,       /* Report errors for fallthrough cases in switch statement */
    "noUncheckedIndexedAccess": true,         /* Include 'undefined' in index signature results */
    
    /* Module Resolution Options */
    "moduleResolution": "node",               /* Specify module resolution strategy */
    "baseUrl": "./src",                       /* Base directory to resolve non-absolute module names */
    "paths": {                                /* A series of entries which re-map imports to lookup locations */
      "@/*": ["*"],
      "@config/*": ["config/*"],
      "@controllers/*": ["controllers/*"],
      "@entities/*": ["entities/*"],
      "@middlewares/*": ["middlewares/*"],
      "@routes/*": ["routes/*"],
      "@services/*": ["services/*"],
      "@utils/*": ["utils/*"]
    },
    "esModuleInterop": true,                  /* Enables emit interoperability between CommonJS and ES Modules */
    "resolveJsonModule": true,                /* Include modules imported with .json extension */
    
    /* Source Map Options */
    "sourceMap": true,                        /* Generates corresponding '.map' file */
    "sourceRoot": "",                         /* Specify the location where debugger should locate TypeScript files */
    "inlineSources": true,                    /* Include source code in the sourcemaps inside the emitted JavaScript */
    
    /* Advanced Options */
    "forceConsistentCasingInFileNames": true, /* Disallow inconsistently-cased references to the same file */
    "skipLibCheck": true,                     /* Skip type checking of declaration files */
    
    /* Experimental Options */
    "experimentalDecorators": true,           /* Enables experimental support for ES7 decorators */
    "emitDecoratorMetadata": true             /* Enables experimental support for emitting type metadata for decorators */
  },
  "include": [
    "src/**/*"
  ],
  "exclude": [
    "node_modules",
    "dist",
    "**/*.test.ts",
    "**/*.spec.ts"
  ]
} 